#############################################################################
####    Import user data from previously published pipeline artefact     ####
#############################################################################

trigger:
- none

# Global variables

pool:
  name: 'clinical-mdr-dev-vmss'

# Runtime parameters
parameters:
- name: DEPLOY_ID_NUMBER
  displayName: ID number of parallel deployments running in the same environment.
  type: string
  default: '1'
  values:
  - '1'
  - '2'
  - '3'
  - '4'
  - '5'
- name: ENV_REFERENCE
  displayName: Enviroment to import data too.
  type: string
  default: 'DEV'
  values:
  - 'DEV'
  - 'TST'
  - 'EDU'

- name: IMPORT_BRANCH
  displayName: Branch of studybuilder-import
  default: main
- name: EXPORT_PIPELINE_BUILD_ID
  displayName: Build ID of the pipeline run to fetch data from.
  default: "000000"

- name: EXPORT_ENV_REFERENCE
  displayName: Enviroment that the data was exported from.
  type: string
  default: 'DEV'
  values:
  - 'DEV'
  - 'TST'
  - 'EDU'

- name: VAULT_NAME_PREFIX
  type: string
  default: kv-general

- name: INCLUDE_PROGRAMMES
  displayName: Enable import of programmes
  type: boolean
  default: true
- name: INCLUDE_BRANDS
  displayName: Enable import of brands
  type: boolean
  default: true
- name: INCLUDE_ACTIVITIES
  displayName: Enable import of activities and activity instances
  type: boolean
  default: true
- name: INCLUDE_UNITS
  displayName: Enable import of units
  type: boolean
  default: true
- name: INCLUDE_COMPOUNDS
  displayName: Enable import of compounds
  type: boolean
  default: true
- name: INCLUDE_TEMPLATES
  displayName: Enable import of syntax templates
  type: boolean
  default: true
- name: INCLUDE_PROJECTS
  displayName: Enable import of projects
  type: boolean
  default: true
- name: INCLUDE_STUDIES
  displayName: Enable import of studies
  type: boolean
  default: true
- name: EXCLUDE_STUDY_NUMBERS
  displayName: Study numbers to exclude from export, separated by comma. Enter a single comma to include all.
  type: string
  default: ','
- name: INCLUDE_STUDY_NUMBERS
  displayName: Study numbers to include from export, separated by comma. Enter a single comma to not exclude any.
  type: string
  default: ','

stages:
- stage: import_data
  jobs:
  - job: 'import_data'
    displayName: Import studybuilder data
    timeoutInMinutes: 120
    steps:
    - checkout: self
      persistCredentials: true
      submodules: true
      clean: true

    - script: |
        cd studybuilder-import
        git fetch origin
        git checkout ${{parameters.IMPORT_BRANCH}}
        git pull
        importcommit=`git rev-parse --short HEAD`
        echo "##vso[task.setvariable variable=importcommit;isOutput=true;]$importcommit"
      displayName: Prepare repo
      name: gitmd

    - task: AzureCLI@2
      displayName: Get AZ metadata
      name: azmd
      inputs:
        azureSubscription: IaCAgent-ClinicalMDR-${{parameters.ENV_REFERENCE}}
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          namesuffix=`az network application-gateway list -g rg-ClinicalMDR-WEU-Application-${{parameters.DEPLOY_ID_NUMBER}}-${{parameters.ENV_REFERENCE}} -o tsv --query '[].[name]' | cut -d "-" -f 2`
          echo "##vso[task.setvariable variable=namesuffix;isOutput=true;]$namesuffix"
    # Get secrets from AzureKeyVault
    - task: AzureKeyVault@1
      displayName: Get oauth token
      inputs:
        azureSubscription: IaCAgent-ClinicalMDR-${{parameters.ENV_REFERENCE}}
        KeyVaultName: '${{parameters.VAULT_NAME_PREFIX}}-$(azmd.namesuffix)'
        RunAsPreJob: false  
        SecretsFilter:
          CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-STUDYB-SERVER-ID,
          CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-OAUTH-TOKEN-URL,
          CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-OAUTH-URI,
          CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-OAUTH-CODE-FLOW-SECRET,
          CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-STUDYB-ENABLE
    # Trust NN Certificate infrastructure
    - script: |
        sudo apt-get install ca-certificates
        sudo cp $(Build.SourcesDirectory)/certificatefiles/nnrootca.crt /usr/local/share/ca-certificates/
        sudo cp $(Build.SourcesDirectory)/certificatefiles/nnissueca1.crt /usr/local/share/ca-certificates/
        sudo update-ca-certificates
      displayName: "Run Novo certificate operations"
    
    # Fetch exported files
    - task: DownloadPipelineArtifact@2
      inputs:
        source: 'specific'
        artifact: 'Export-${{parameters.EXPORT_ENV_REFERENCE}}'
        path: $(Build.SourcesDirectory)/exported
        project: 'Clinical-MDR'
        pipeline: 4337
        runVersion: 'specific'
        runId: ${{parameters.EXPORT_PIPELINE_BUILD_ID}}
      displayName: Fetch exported data
    # Set Python Version
    - task: UsePythonVersion@0
      displayName: Python Version
      inputs:
        versionSpec: '3.7'
        addToPath: true
        architecture: 'x64'
    # Start export NOTE: REQUESTS_CA_BUNDLE is used for python to used OS CA certificate store.
    # WAF API export API_BASE_URL="https://studybuilder.clinicalmdr-${{lower(parameters.ENV_REFERENCE)}}.corp.azure.novonordisk.com/api"
    # Use CA Certs export REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    # Direct API export API_BASE_URL="https://app-api-$(azmd.namesuffix).azurewebsites.net"
    - script: |
        cd $(Build.SourcesDirectory)/studybuilder-import
        python3 -m venv venv --clear
        pip install pipenv
        python -m pipenv install
        
        [[ $(CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-STUDYB-ENABLE) == 1 ]] && export CLIENT_ID="$(CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-STUDYB-SERVER-ID)"
        export CLIENT_SECRET="$(CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-OAUTH-CODE-FLOW-SECRET)"
        export TOKEN_ENDPOINT="$(CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-OAUTH-TOKEN-URL)"
        export SCOPE="$(CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-OAUTH-URI)/.default"

        export API_BASE_URL="https://app-api-$(azmd.namesuffix).azurewebsites.net"
        export IMPORT_PROJECTS="$(Build.SourcesDirectory)/exported/projects.json"
        export INCLUDE_STUDY_NUMBERS=${{parameters.INCLUDE_STUDY_NUMBERS}}
        export EXCLUDE_STUDY_NUMBERS=${{parameters.EXCLUDE_STUDY_NUMBERS}}
        export MDR_MIGRATION_EXPORTED_PROGRAMMES=${{parameters.INCLUDE_PROGRAMMES}}
        export MDR_MIGRATION_EXPORTED_BRANDS=${{parameters.INCLUDE_BRANDS}}
        export MDR_MIGRATION_EXPORTED_ACTIVITIES=${{parameters.INCLUDE_ACTIVITIES}}
        export MDR_MIGRATION_EXPORTED_UNITS=${{parameters.INCLUDE_UNITS}}
        export MDR_MIGRATION_EXPORTED_COMPOUNDS=${{parameters.INCLUDE_COMPOUNDS}}
        export MDR_MIGRATION_EXPORTED_TEMPLATES=${{parameters.INCLUDE_TEMPLATES}}
        export MDR_MIGRATION_EXPORTED_PROJECTS=${{parameters.INCLUDE_PROJECTS}}
        export MDR_MIGRATION_EXPORTED_STUDIES=${{parameters.INCLUDE_STUDIES}}
        echo "Log pipeline options"
        echo "# Import log for environment ${{parameters.ENV_REFERENCE}}" > import_log.md
        echo "" >> import_log.md
        echo "## Pipeline options" >> import_log.md
        echo "- Branch of studybuilder-import: ${{parameters.IMPORT_BRANCH}}" >> import_log.md
        echo "- Source build ID: ${{parameters.EXPORT_PIPELINE_BUILD_ID}}" >> import_log.md
        echo "- Parallel deployments: ${{parameters.DEPLOY_ID_NUMBER}}" >> import_log.md
        echo "" >> import_log.md
        echo "## Import log" >> import_log.md
        echo "" >> import_log.md
        echo "\`\`\`" >> import_log.md
        echo "Run import"
        python -m pipenv run mockdatajson 2>&1 | tee -a import_log.md
        echo "\`\`\`" >> import_log.md
        echo "Upload summary"
        echo "##vso[task.uploadsummary]$(Build.SourcesDirectory)/studybuilder-import/import_log.md"
      displayName: "Run import"


