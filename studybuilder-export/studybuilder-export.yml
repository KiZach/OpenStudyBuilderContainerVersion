#########################################################################################
####  Export all user data from a StudyBuilder env and publish as pipeline artefact  ####
#########################################################################################

trigger:
- none

# Global variables

pool:
  name: 'clinical-mdr-dev-vmss'

# Runtime parameters
parameters:
- name: DEPLOY_ID_NUMBER
  displayName: ID number of parallel deployments running in the same environment.
  type: string 
  default: '1'
  values:
  - '1'
  - '2'
  - '3'
  - '4'
  - '5'
- name: ENV_REFERENCE
  displayName: Enviroment to export data from.
  type: string 
  default: 'DEV'
  values:
  - 'DEV'
  - 'TST'
  - 'EDU'
  - 'PRD'
- name: EXCLUDE_STUDY_NUMBERS
  displayName: Study numbers to exclude from export, separated by comma. Enter a single comma to include all.
  type: string
  default: ','
- name: INCLUDE_STUDY_NUMBERS
  displayName: Study numbers to include from export, separated by comma. Enter a single comma to not exclude any.
  type: string
  default: ','
- name: VAULT_NAME_PREFIX
  type: string
  default: kv-general

stages:
- stage: export_data
  jobs:
  - job: 'export_data'
    displayName: Export studybuilder data
    timeoutInMinutes: 10
    steps:
    - checkout: self
      persistCredentials: true
      submodules: true
      clean: true

    - task: AzureCLI@2
      displayName: Get AZ metadata
      name: azmd
      inputs:
        azureSubscription: IaCAgent-ClinicalMDR-${{parameters.ENV_REFERENCE}}
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          namesuffix=`az network application-gateway list -g rg-ClinicalMDR-WEU-Application-${{parameters.DEPLOY_ID_NUMBER}}-${{parameters.ENV_REFERENCE}} -o tsv --query '[].[name]' | cut -d "-" -f 2`
          echo "##vso[task.setvariable variable=namesuffix;isOutput=true;]$namesuffix"
    # Get secrets from AzureKeyVault
    - task: AzureKeyVault@1
      displayName: Get oauth token
      inputs:
        azureSubscription: IaCAgent-ClinicalMDR-${{parameters.ENV_REFERENCE}}
        KeyVaultName: '${{parameters.VAULT_NAME_PREFIX}}-$(azmd.namesuffix)'
        RunAsPreJob: false  
        SecretsFilter:
          CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-STUDYB-SERVER-ID,
          CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-OAUTH-TOKEN-URL,
          CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-OAUTH-URI,
          CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-OAUTH-CODE-FLOW-SECRET,
          CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-STUDYB-ENABLE
    # Trust NN Certificate infrastructure
    - script: |
        sudo apt-get install ca-certificates
        sudo cp $(Build.SourcesDirectory)/certificatefiles/nnrootca.crt /usr/local/share/ca-certificates/
        sudo cp $(Build.SourcesDirectory)/certificatefiles/nnissueca1.crt /usr/local/share/ca-certificates/
        sudo update-ca-certificates
      displayName: "Run Novo certificate operations"
    
    # Set Python Version
    - task: UsePythonVersion@0
      displayName: Python Version
      inputs:
        versionSpec: '3.8'
        addToPath: true
        architecture: 'x64'
    # Start export NOTE: REQUESTS_CA_BUNDLE is used for python to used OS CA certificate store.
    # WAF API export API_BASE_URL="https://studybuilder.clinicalmdr-${{lower(parameters.ENV_REFERENCE)}}.corp.azure.novonordisk.com/api"
    # Use CA Certs export REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    # Direct API export API_BASE_URL="https://app-api-$(azmd.namesuffix).azurewebsites.net"
    - script: |
        pip install -r requirements.txt

        [[ $(CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-STUDYB-ENABLE) == 1 ]] && export CLIENT_ID="$(CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-STUDYB-SERVER-ID)"
        export CLIENT_SECRET="$(CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-OAUTH-CODE-FLOW-SECRET)"
        export TOKEN_ENDPOINT="$(CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-OAUTH-TOKEN-URL)"
        export SCOPE="$(CLINICAL-MDR-AUTH-${{parameters.DEPLOY_ID_NUMBER}}-OAUTH-URI)/.default"

        export API_BASE_URL="https://app-api-$(azmd.namesuffix).azurewebsites.net"
        export INCLUDE_STUDY_NUMBERS=${{parameters.INCLUDE_STUDY_NUMBERS}}
        export EXCLUDE_STUDY_NUMBERS=${{parameters.EXCLUDE_STUDY_NUMBERS}}
        python export.py

      displayName: "Run export"
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(System.DefaultWorkingDirectory)/output
        artifactName: Export-${{parameters.ENV_REFERENCE}}


