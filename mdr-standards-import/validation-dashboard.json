{
  "title": "Exploring CDISC Data Models",
  "version": "2.2",
  "settings": {
    "pagenumber": 1,
    "editable": true,
    "fullscreenEnabled": false,
    "parameters": {
      "neodash_model_uid": "SDTM",
      "neodash_model_version": "SDTM v2.0",
      "neodash_class_uid": "Special-Purpose-DM",
      "neodash_ig_uid": "SDTMIG",
      "neodash_ig_version": "SDTMIG v3.2",
      "neodash_dataset_uid": "CO",
      "neodash_cdash_ig_uid": "CDASHIG",
      "neodash_cdash_ig_version": "CDASHIG v2.2",
      "neodash_cdash_dataset_uid": "EG",
      "neodash_cdash_scenario_uid": "Central Reading with Investigator Assessment"
    }
  },
  "pages": [
    {
      "title": "Catalogues",
      "reports": [
        {
          "title": "Physical Data Model - Excluding Catalogue for clarity",
          "query": "CALL apoc.meta.subGraph({labels: [\"DataModelRoot\", \"DataModelIGRoot\", \"DataModelIGValue\", \"DataModelPackage\", \"DataModelRoot\", \"DataModelValue\", \"DatasetClass\", \"Dataset\", \"Dataset\", \"DatasetClassInstance\", \"DatasetInstance\", \"VariableClass\", \"DatasetVariable\", \"VariableClassInstance\", \"DatasetVariableInstance\"]})\nYIELD nodes, relationships\nRETURN *\n\n\n",
          "width": 8,
          "height": 3,
          "x": 0,
          "y": 0,
          "type": "graph",
          "selection": {
            "DataModelIGRoot": "name",
            "DataModelIGValue": "name",
            "DataModelRoot": "name",
            "DataModelValue": "name",
            "Dataset": "name",
            "DatasetClass": "name",
            "DatasetClassInstance": "name",
            "DatasetInstance": "name",
            "DatasetVariable": "name",
            "DatasetVariableInstance": "name",
            "VariableClass": "name",
            "VariableClassInstance": "name"
          },
          "settings": {
            "nodePositions": {}
          }
        },
        {
          "title": "Catalogues, models and versions",
          "query": "MATCH path=(:DataModelCatalogue)-[:HAS_DATA_MODEL|HAS_DATA_MODEL_IG|HAS_VERSION*2]->()\nWITH nodes(path) as no\nWITH no, last(no) as leaf\nWITH  [n IN no[..-1] | coalesce(n.uid, n.name)] AS result, count(leaf) as val\nRETURN result, val\n\n",
          "width": 4,
          "height": 3,
          "x": 8,
          "y": 0,
          "type": "circlePacking",
          "selection": {
            "index": "result",
            "value": "val",
            "key": "(none)"
          },
          "settings": {
            "nodePositions": {},
            "showLabels": true
          }
        }
      ]
    },
    {
      "title": "Models",
      "reports": [
        {
          "title": "Available models - $neodash_model_uid",
          "query": "MATCH (:DataModelCatalogue)-->(m:DataModelRoot)\nRETURN \"Select\" AS select, m.uid AS model\n\n\n",
          "width": 3,
          "height": 2,
          "x": 0,
          "y": 0,
          "type": "table",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "actionsRules": [
              {
                "condition": "Click",
                "field": "select",
                "value": "model",
                "customization": "set variable",
                "customizationValue": "model_uid"
              }
            ]
          }
        },
        {
          "title": "Versions - $neodash_model_version",
          "query": "MATCH (n:DataModelRoot)-->(m:DataModelValue)\nWHERE n.uid=$neodash_model_uid\nRETURN DISTINCT \"Select\" AS select, m.name AS version ORDER BY version DESC",
          "width": 3,
          "height": 2,
          "x": 3,
          "y": 0,
          "type": "table",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "actionsRules": [
              {
                "condition": "Click",
                "field": "select",
                "value": "version",
                "customization": "set variable",
                "customizationValue": "model_version"
              }
            ]
          }
        },
        {
          "title": "Classes - $neodash_class_uid",
          "query": "MATCH (:DataModelValue {name: $neodash_model_version})\n-[rel:HAS_DATASET_CLASS]->(:DatasetClassInstance)<--(class:DatasetClass)\nWITH class.uid AS class, apoc.text.split(rel.ordinal, \"\\.\") AS split_ordinal ORDER BY toInteger(split_ordinal[0]), toInteger(split_ordinal[1])\nRETURN DISTINCT \"Select\" AS select, class",
          "width": 3,
          "height": 2,
          "x": 6,
          "y": 0,
          "type": "table",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "actionsRules": [
              {
                "condition": "Click",
                "field": "select",
                "value": "class",
                "customization": "set variable",
                "customizationValue": "class_uid"
              }
            ]
          }
        },
        {
          "title": "Variables",
          "query": "MATCH (model_value:DataModelValue {name: $neodash_model_version})\n-[:HAS_DATASET_CLASS]->(class_value:DatasetClassInstance)<--(:DatasetClass {uid: $neodash_class_uid})\nMATCH (class_value)-[rel:HAS_VARIABLE_CLASS]->(variable_value:VariableClassInstance)<--(variable_root:VariableClass)\nWHERE rel.version_number=model_value.version_number\nOPTIONAL MATCH (variable_value)-[qualified_rel:QUALIFIES_VARIABLE]->(qualified_value:VariableClassInstance)<--(qualified_root:VariableClass)\nWHERE qualified_rel.version_number=model_value.version_number\nWITH variable_root, variable_value, collect(DISTINCT qualified_root.uid) AS qualifies, rel.ordinal AS ordinal ORDER BY toInteger(ordinal)\nRETURN DISTINCT variable_root.uid AS variable, variable_value.label AS label, variable_value.role AS role, qualifies, $neodash_class_uid AS origin\n\nUNION\n\nMATCH (model_root:DataModelRoot)-->(model_value:DataModelValue {name: $neodash_model_version})\n-[:HAS_DATASET_CLASS]->(class_value:DatasetClassInstance)<--(:DatasetClass {uid: $neodash_class_uid})\nMATCH p=(class_value)-[parent_rel:HAS_PARENT_CLASS*..2]->(parent_class_value:DatasetClassInstance)\nWHERE all(parent_rel in relationships(p) where parent_rel.catalogue=model_root.uid AND parent_rel.version_number=model_value.version_number)\nMATCH ()-[parent_has_class_rel:HAS_DATASET_CLASS]->(parent_class_value)<--(parent_class_root:DatasetClass)\nMATCH (parent_class_value)-[rel:HAS_VARIABLE_CLASS]->(variable_value:VariableClassInstance)<--(variable_root:VariableClass)\nWHERE rel.version_number=model_value.version_number\nOPTIONAL MATCH (variable_value)-[qualified_rel:QUALIFIES_VARIABLE]->(qualified_value:VariableClassInstance)<--(qualified_root:VariableClass)\nWHERE qualified_rel.version_number=model_value.version_number\nWITH parent_class_root.uid AS parent_class, parent_has_class_rel.ordinal AS parent_ordinal, variable_root, variable_value, collect(DISTINCT qualified_root.uid) AS qualifies, rel.ordinal AS ordinal ORDER BY parent_ordinal, toInteger(ordinal)\nRETURN DISTINCT variable_root.uid AS variable, variable_value.label AS label, variable_value.role AS role, qualifies, parent_class AS origin",
          "width": 12,
          "height": 2,
          "x": 0,
          "y": 2,
          "type": "table",
          "selection": {},
          "settings": {
            "nodePositions": {}
          }
        },
        {
          "title": "Implemented by",
          "query": "MATCH (:DataModelValue {name: $neodash_model_version})<-[:IMPLEMENTS]-(ig:DataModelIGValue)\nWITH collect(ig.name) AS names\nRETURN apoc.text.join(names, ', ')\n",
          "width": 3,
          "height": 2,
          "x": 9,
          "y": 0,
          "type": "value",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "fontSize": 32
          }
        }
      ]
    },
    {
      "title": "Implementation Guides - SDTM&SEND",
      "reports": [
        {
          "title": "Available guides - $neodash_ig_uid",
          "query": "MATCH (:DataModelCatalogue)-->(m:DataModelIGRoot)\nWHERE m.uid contains \"SDTMIG\" OR m.uid contains \"SENDIG\"\nRETURN \"Select\" AS select, m.uid AS guide\n\n\n",
          "width": 3,
          "height": 2,
          "x": 0,
          "y": 0,
          "type": "table",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "actionsRules": [
              {
                "condition": "Click",
                "field": "select",
                "value": "guide",
                "customization": "set variable",
                "customizationValue": "ig_uid"
              }
            ],
            "columnWidths": "[1, 2]"
          }
        },
        {
          "title": "Versions - $neodash_ig_version",
          "query": "MATCH (n:DataModelIGRoot)-->(m:DataModelIGValue)\nWHERE n.uid=$neodash_ig_uid\nOPTIONAL MATCH (m)-[:IMPLEMENTS]->(model)\nRETURN DISTINCT \"Select\" AS select, m.name AS version, model.name AS implements ORDER BY version DESC\n",
          "width": 3,
          "height": 2,
          "x": 3,
          "y": 0,
          "type": "table",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "actionsRules": [
              {
                "condition": "Click",
                "field": "select",
                "value": "version",
                "customization": "set variable",
                "customizationValue": "ig_version"
              }
            ]
          }
        },
        {
          "title": "Datasets - $neodash_dataset_uid",
          "query": "MATCH (catalogue:DataModelCatalogue)-->(model_root:DataModelIGRoot)-->(model_value:DataModelIGValue {name: $neodash_ig_version})\n-[rel:HAS_DATASET]->(value:DatasetInstance)<--(dataset:Dataset)\nOPTIONAL MATCH (value)-[implements:IMPLEMENTS_DATASET_CLASS]->(class_value)<-[:HAS_INSTANCE]-(class_root)\nWHERE implements.catalogue = catalogue.name AND implements.version_number = model_value.version_number\nWITH dataset.uid AS dataset, class_root.uid AS implements, apoc.text.split(rel.ordinal, \"\\.\") AS split_ordinal ORDER BY toInteger(split_ordinal[0]), toInteger(split_ordinal[1])\nRETURN DISTINCT \"Select\" AS select, dataset, implements\n",
          "width": 3,
          "height": 2,
          "x": 6,
          "y": 0,
          "type": "table",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "actionsRules": [
              {
                "condition": "Click",
                "field": "select",
                "value": "dataset",
                "customization": "set variable",
                "customizationValue": "dataset_uid"
              }
            ],
            "columnWidths": "[1.5, 1.5, 2]"
          }
        },
        {
          "title": "Variables",
          "query": "MATCH (model_root:DataModelIGRoot)-->(model_value:DataModelIGValue {name: $neodash_ig_version})\n-[:HAS_DATASET]->(dataset_value:DatasetInstance)<--(:Dataset {uid: $neodash_dataset_uid})\nMATCH (dataset_value)-[rel:HAS_DATASET_VARIABLE]->(variable_value:DatasetVariableInstance)<--(variable_root:DatasetVariable)\nWHERE rel.version_number=model_value.version_number\nOPTIONAL MATCH (variable_value)-[:REFERENCES_CODELIST]->(codelist:CTCodelistRoot)\nOPTIONAL MATCH (codelist)-[:HAS_ATTRIBUTES_ROOT]->(codelistattributeroot:CTCodelistAttributesRoot)-[:LATEST]->(codelistattributevalue:CTCodelistAttributesValue)\nOPTIONAL MATCH (variable_value)-[implements:IMPLEMENTS_VARIABLE]->()<-[:HAS_INSTANCE]-(implemented)\nWHERE implements.catalogue = model_root.uid AND implements.version_number = model_value.version_number\nWITH variable_root, variable_value, codelist, codelistattributevalue, implemented, apoc.text.split(rel.ordinal, \"\\.\") AS split_ordinal ORDER BY toInteger(split_ordinal[0]), toInteger(split_ordinal[1])\nRETURN DISTINCT variable_root.uid AS variable, variable_value.label AS label, variable_value.description AS description, variable_value.simple_datatype AS dataType, variable_value.role AS role, collect(DISTINCT (codelist.uid + ' ' + codelistattributevalue.submission_value)) AS codelist, implemented.uid AS implements",
          "width": 12,
          "height": 2,
          "x": 0,
          "y": 4,
          "type": "table",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "columnWidths": "[0.75, 1, 2.5, 0.5, 0.5, 1, 0.75]"
          }
        }
      ]
    },
    {
      "title": "Implementation Guides - CDASH",
      "reports": [
        {
          "title": "Available guides - $neodash_cdash_ig_uid",
          "query": "MATCH (:DataModelCatalogue)-->(m:DataModelIGRoot)\nWHERE m.uid contains \"CDASHIG\"\nRETURN \"Select\" AS select, m.uid AS guide",
          "width": 3,
          "height": 2,
          "x": 0,
          "y": 0,
          "type": "table",
          "selection": {},
          "settings": {
            "actionsRules": [
              {
                "condition": "Click",
                "field": "select",
                "value": "guide",
                "customization": "set variable",
                "customizationValue": "cdash_ig_uid"
              }
            ]
          }
        },
        {
          "title": "Version - $neodash_cdash_ig_version",
          "query": "MATCH (n:DataModelIGRoot)-->(m:DataModelIGValue)\nWHERE n.uid=$neodash_cdash_ig_uid\nOPTIONAL MATCH (m)-[:IMPLEMENTS]->(model)\nRETURN DISTINCT \"Select\" AS select, m.name AS version, model.name AS implements ORDER BY version DESC\n",
          "width": 3,
          "height": 2,
          "x": 3,
          "y": 0,
          "type": "table",
          "selection": {},
          "settings": {
            "actionsRules": [
              {
                "condition": "Click",
                "field": "select",
                "value": "version",
                "customization": "set variable",
                "customizationValue": "cdash_ig_version"
              }
            ]
          }
        },
        {
          "title": "Datasets - $neodash_cdash_dataset_uid",
          "query": "MATCH (catalogue:DataModelCatalogue)-->(model_root:DataModelIGRoot)-->(model_value:DataModelIGValue {name: $neodash_cdash_ig_version})\n-[rel:HAS_DATASET]->(value:DatasetInstance)<--(dataset:Dataset)\nOPTIONAL MATCH (value)-[implements:IMPLEMENTS_DATASET_CLASS]->(class_value)<-[:HAS_INSTANCE]-(class_root)\nWHERE implements.catalogue = catalogue.name AND implements.version_number = model_value.version_number\nWITH dataset.uid AS dataset, class_root.uid AS implements, apoc.text.split(rel.ordinal, \"\\.\") AS split_ordinal ORDER BY toInteger(split_ordinal[0]), toInteger(split_ordinal[1])\nRETURN DISTINCT \"Select\" AS select, dataset, implements\n",
          "width": 3,
          "height": 2,
          "x": 6,
          "y": 0,
          "type": "table",
          "selection": {},
          "settings": {
            "actionsRules": [
              {
                "condition": "Click",
                "field": "select",
                "value": "dataset",
                "customization": "set variable",
                "customizationValue": "cdash_dataset_uid"
              }
            ]
          }
        },
        {
          "title": "",
          "query": "MATCH (model_root:DataModelIGRoot)-->(model_value:DataModelIGValue {name: $neodash_cdash_ig_version})\n-[:HAS_DATASET]->(dataset_value:DatasetInstance)<--(:Dataset {uid: $neodash_cdash_dataset_uid})\nMATCH (dataset_value)-[rel:HAS_DATASET_VARIABLE]->(variable_value:DatasetVariableInstance)<--(variable_root:DatasetVariable)\nWHERE rel.version_number=model_value.version_number\nOPTIONAL MATCH (variable_value)-[:REFERENCES_CODELIST]->(codelist:CTCodelistRoot)\nOPTIONAL MATCH (codelist)-[:HAS_ATTRIBUTES_ROOT]->(codelistattributeroot:CTCodelistAttributesRoot)-[:LATEST]->(codelistattributevalue:CTCodelistAttributesValue)\nOPTIONAL MATCH (variable_value)-[implements:IMPLEMENTS_VARIABLE]->()<-[:HAS_INSTANCE]-(implemented)\nWHERE implements.catalogue = model_root.uid AND implements.version_number = model_value.version_number\nOPTIONAL MATCH (variable_value)-[has_mapping_target:HAS_MAPPING_TARGET]->()<-[:HAS_INSTANCE]-(mapping_target)\nWHERE has_mapping_target.version_number = model_value.version_number\nWITH variable_root, variable_value, codelist, codelistattributevalue, implemented, mapping_target, apoc.text.split(rel.ordinal, \"\\.\") AS split_ordinal ORDER BY toInteger(split_ordinal[0]), toInteger(split_ordinal[1])\nRETURN DISTINCT variable_root.uid AS variable, variable_value.label AS label, variable_value.description AS description, variable_value.simple_datatype AS dataType, variable_value.core AS core, variable_value.completion_instructions AS `completion instructions`, variable_value.implementation_notes AS `implementation notes`, variable_value.mapping_instructions AS `mapping instructions`, collect(DISTINCT(codelist.uid + ' ' + codelistattributevalue.submission_value)) AS codelist, implemented.uid AS implements, collect(DISTINCT mapping_target.uid) AS `mapping targets`\n\nUNION\nMATCH (model_root:DataModelIGRoot)-->(model_value:DataModelIGValue {name: $neodash_cdash_ig_version})\n-[:HAS_DATASET]->(dataset_value:DatasetInstance)<--(:Dataset {uid: $neodash_cdash_dataset_uid})\nMATCH (scenario_value:DatasetScenarioInstance)<--(scenario_root:DatasetScenario)\nWHERE scenario_root.uid=$neodash_cdash_scenario_uid\nMATCH (dataset_value)-[:HAS_DATASET_SCENARIO]->(scenario_value:DatasetScenarioInstance)-[rel:HAS_DATASET_VARIABLE]->(variable_value:DatasetVariableInstance)<--(variable_root:DatasetVariable)\nWHERE rel.version_number=model_value.version_number\nMATCH (variable_value)-[rel_imp:HAS_SCENARIO_IMPLEMENTATION]->(implementation)\nWHERE rel_imp.version_number=model_value.version_number\nOPTIONAL MATCH (implementation)-[:REFERENCES_CODELIST]->(codelist:CTCodelistRoot)\nOPTIONAL MATCH (codelist)-[:HAS_ATTRIBUTES_ROOT]->(codelistattributeroot:CTCodelistAttributesRoot)-[:LATEST]->(codelistattributevalue:CTCodelistAttributesValue)\nOPTIONAL MATCH (implementation)-[implements:IMPLEMENTS_VARIABLE]->()<-[:HAS_INSTANCE]-(implemented)\nWHERE implements.catalogue = model_root.uid AND implements.version_number = model_value.version_number\nOPTIONAL MATCH (variable_value)-[has_mapping_target:HAS_MAPPING_TARGET]->()<-[:HAS_INSTANCE]-(mapping_target)\nWHERE has_mapping_target.version_number = model_value.version_number\nWITH variable_root, variable_value, implementation, codelist, codelistattributevalue, implemented, mapping_target, apoc.text.split(rel.ordinal, \"\\.\") AS split_ordinal ORDER BY toInteger(split_ordinal[0]), toInteger(split_ordinal[1])\nRETURN DISTINCT variable_root.uid AS variable, variable_value.label AS label, implementation.description AS description, variable_value.simple_datatype AS dataType, implementation.core AS core, implementation.completion_instructions AS `completion instructions`, implementation.implementation_notes AS `implementation notes`, implementation.mapping_instructions AS `mapping instructions`, collect(DISTINCT(codelist.uid + ' ' + codelistattributevalue.submission_value)) AS codelist, implemented.uid AS implements, collect(DISTINCT mapping_target.uid) AS `mapping targets`",
          "width": 12,
          "height": 2,
          "x": 0,
          "y": 2,
          "type": "table",
          "selection": {},
          "settings": {
            "columnWidths": "[3, 3, 5, 2, 1, 7, 7, 7, 2, 2, 2]"
          }
        },
        {
          "title": "Scenarii - $neodash_cdash_scenario_uid",
          "query": "MATCH (model_root:DataModelIGRoot)-->(model_value:DataModelIGValue {name: $neodash_cdash_ig_version})\n-[:HAS_DATASET]->(dataset_value:DatasetInstance)<--(:Dataset {uid: $neodash_cdash_dataset_uid})\nMATCH (dataset_value)-[rel:HAS_DATASET_SCENARIO]->(scenario_value:DatasetScenarioInstance)<--(scenario_root:DatasetScenario)\nWHERE rel.version_number=model_value.version_number\nWITH scenario_root.uid AS scenario, apoc.text.split(rel.ordinal, \"\\.\") AS split_ordinal ORDER BY toInteger(split_ordinal[0]), toInteger(split_ordinal[1])\nRETURN DISTINCT \"Select\" AS select, scenario\n",
          "width": 3,
          "height": 2,
          "x": 9,
          "y": 0,
          "type": "table",
          "selection": {},
          "settings": {
            "actionsRules": [
              {
                "condition": "Click",
                "field": "select",
                "value": "scenario",
                "customization": "set variable",
                "customizationValue": "cdash_scenario_uid"
              }
            ],
            "columnWidths": "[1, 4]"
          }
        }
      ]
    }
  ],
  "parameters": {},
  "extensions": {
    "advanced-charts": true,
    "actions": true
  }
}